@charset 'utf-8';

@import 'settings';
@import 'foundation';
@import 'motion-ui';

// Global styles
@include foundation-global-styles;
@include foundation-forms;
@include foundation-typography;

// Grids (choose one)
@include foundation-xy-grid-classes;
// @include foundation-grid;
// @include foundation-flex-grid;

// Generic components
@include foundation-button;
@include foundation-button-group;
@include foundation-close-button;
@include foundation-label;
@include foundation-progress-bar;
@include foundation-slider;
@include foundation-range-input;
@include foundation-switch;
@include foundation-table;
// Basic components
@include foundation-badge;
@include foundation-breadcrumbs;
@include foundation-callout;
@include foundation-card;
@include foundation-dropdown;
@include foundation-pagination;
@include foundation-tooltip;

// Containers
@include foundation-accordion;
@include foundation-media-object;
@include foundation-orbit;
@include foundation-responsive-embed;
@include foundation-tabs;
@include foundation-thumbnail;
// Menu-based containers
@include foundation-menu;
@include foundation-menu-icon;
@include foundation-accordion-menu;
@include foundation-drilldown-menu;
@include foundation-dropdown-menu;

// Layout components
@include foundation-off-canvas;
@include foundation-reveal;
@include foundation-sticky;
@include foundation-title-bar;
@include foundation-top-bar;

// Helpers
@include foundation-float-classes;
@include foundation-flex-classes;
@include foundation-visibility-classes;
// @include foundation-prototype-classes;

// Motion UI
@include motion-ui-transitions;
@include motion-ui-animations;

// Foundation color palette
@include add-foundation-colors;


// Start of custom SCSS

// TODO: Foundation media queries variables/breakpoints + import
/* ------------------ Media queries for sizes (copy/paste) ------------------ */
// small: @media screen and (max-width: 39.99875em)
// medium: @media screen and (min-width: 39.99876em)


/* --------------------------------- Globals -------------------------------- */
// Smooth scrolling is enabled w/ Foundation's "data-smooth-scroll" in nav

// Vertically center elements with margins IF NOT INSIDE A DIV ESP WITH BG STYLING
@mixin vcenter-margin {        // mixin to be reused inside SCSS
    display: block;
    margin-top: auto;
    margin-bottom: auto;
}
.vcenter-margin { @include vcenter-margin; }

// Vertically center elements with paddings IF INSIDE A DIV
@mixin vcenter-padding($value) {        // mixin to be reused inside SCSS
    height: $value;
    padding-top: calc($value/2);
    padding-bottom: calc($value/2);

    // .clearfix hack to keep elements inside div or else they will float
    content: "";
    clear: both;
    display: table;
}
.vcenter-padding { @include vcenter-padding(4em); }

// Horizontally center elements via "float-center".  This is used for @mixin only
@mixin hcenter {        // mixin to be reused inside SCSS
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Add more margin to side for small screens
$margin-gutter: 2.5em;
@media screen and (max-width: 39.99875em) {
    .margin-small {
        margin-left: $margin-gutter;
        margin-right: $margin-gutter;
    }
}


/* --------------------------------- Nav bar -------------------------------- */
// Prevent flash of unstyled content
.no-js .top-bar { display: none; } 
@media screen and (min-width: 40em) {
    .no-js .top-bar { display: block; }
    .no-js .title-bar { display: none; }
}

// TODO: dynamic header container size b/w screens?
// Dynamic header hero container height
@mixin header-hero-height($sticky-shrinknav-hero-height) {
  // Change header height for small screens
  @media screen and (max-width: 39.99875em) {
    height: $sticky-shrinknav-hero-height - 40em;
  }

  // Change header height for medium and up screens
  @media screen and (min-width: 39.99876em) {
    height: $sticky-shrinknav-hero-height;
  }
}

// Stick collapsible/shrinking menu header
$sticky-shrinknav-menu-height: rem-calc(60);    // menu height (returns 3.75rem)
$sticky-shrinknav-hero-height: 18.75em + 6em;   // header container height

// Need to move main content below menu/header bar when header container is expanded
body {
  padding-top: $sticky-shrinknav-hero-height + 1.875em;
}

// Menu bar
.sticky-shrinknav-menu {
  @include horizontal-center;
  padding-top: .7em;
  bottom: 0;
  height: $sticky-shrinknav-menu-height;
  line-height: $sticky-shrinknav-menu-height;
  width: 100%;
  background-color: rgba($primary-color, 0.1);
  transition: all 0.5s ease;

  li {
    border-radius: 0.125em;
    transition: all 0.3s ease;

    &:hover {
      box-shadow: 0 0 0 0.0625em $white;
    }
  }

  a {
    color: $white;
  }
}

// Header container
.sticky-shrinknav-header {
  padding-top: 2.3em;
  width: 100%;
  height: $sticky-shrinknav-hero-height;
  display: flex;
  flex-wrap: wrap;          // allows any extra text lines to go to next line
  align-items: center;
  align-content: center;    // align flex content vertically
  justify-content: center;
  background-color: lighten($primary-color, 10%);
  text-align: center;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  transition: all 0.5s ease;
}

// Header text
.sticky-shrinknav-header-title {
  transition: all 0.3s ease;
  position: relative;
  transform: translateY(-1 * calc($sticky-shrinknav-menu-height / 2));
  margin-bottom: 0;
  color: $white;
}

// Applies to <body>, it gets wrapped for nav/header
body.sticky-shrinknav-wrapper {
  padding-top: $sticky-shrinknav-menu-height + 3.875rem; // 1.875em / 30px;
  
  .sticky-shrinknav-header{
    height: $sticky-shrinknav-menu-height;
    background-color: rgba($primary-color, 0.9);
    margin-bottom: 3em;
    
    .sticky-shrinknav-header-title{
      transform: scale(0);
      transition: all 0.3s ease;
    }
  }
}

// For any additional flex elements needing to line break
.line-break { width: 100% }

// Without this, the callout element will appear on top of the menu nav
.callout {
  position: static;
}

// Padding above elements (e.g. resume button)
.resume-padding {
  margin-top: 1.7em;
}

// Space when scrolling
.grid-container {
  scroll-padding: 500px;
}

// .cell {
//   scroll-snap-align: start;
// }

.section-padding {
  padding-top: $sticky-shrinknav-menu-height + 1rem;
}

/* ---------------------------- Introduction page --------------------------- */


// Custom height for intro div area
.introduction {
    @include vcenter-padding(15em);     // div height + vertically center elements
    background-color: $primary-color;
    margin-bottom: 5em;
}

// White text for intro contrast
.contrast-white {
    color: white;
}


/* ------------------------------- About page ------------------------------- */
// Customize thumbnail cropping (medium-large screens)
.round {
    object-fit: cover;          // prevent image from stretching
    object-position: 0% 25%;    // move the crop around, [left/right] [up/down]
    aspect-ratio: 1/1;          // crops to a square
    border-radius: 50%;         // round corners
    width: 17em;                // size of image
}

// Adjust thumbnail size and centered when stacked in small devices
@media screen and (max-width: 39.99875em) {
    .stack-for-small .media-object-section img {
        width: 13em;
        @include hcenter;   // center left/right
    }
}


// Add more margin to side of text in media-object container for medium+ screen sizes
@media screen and (min-width: 39.99876em) {
    .margin-side-left {
        margin-left: 3em;
    }
}